server:
  port: 8086

spring:
  application:
    name: payment-service
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: 
  h2:
    console:
      enabled: true
  data:
    redis:
      host: localhost
      port: 6379
  kafka:
    bootstrap-servers: 192.168.1.100:9092
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        linger.ms: 5
        batch.size: 30000
        buffer.memory: 30000000
    consumer:
      group-id: payment-service-group
      auto-offset-reset: earliest
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "*"

resilience4j:
  circuitbreaker:
    instances:
      pricing-service:
        failure-rate-threshold: 50
        minimum-number-of-calls: 10
        sliding-window-type: count-based
        sliding-window-size: 20
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 5
      user-service:
        failure-rate-threshold: 50
        minimum-number-of-calls: 10
        sliding-window-type: count-based
        sliding-window-size: 20
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 5

services:
  pricing-service:
    url: http://localhost:8087
  user-service:
    url: http://localhost:8081

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
